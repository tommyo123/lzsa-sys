name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 0.9.1-test)'
        required: true
        default: '0.9.1-test'
      create_release:
        description: 'Create GitHub release?'
        required: true
        type: boolean
        default: false

env:
  CARGO_TERM_COLOR: always

jobs:
  # Windows build (MSI + Portable)
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git for private repos
        run: |
          git config --global url."https://${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Set version
        id: version
        run: |
          if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            $fullVersion = "${{ github.event.inputs.version }}"
          } else {
            $fullVersion = "${{ github.ref_name }}"
          }
          
          $fullVersion = $fullVersion -replace '^v', ''
          
          if ($fullVersion -match '^(\d+\.\d+\.\d+)') {
            $wixVersion = $matches[1] + '.0'
          } else {
            $wixVersion = '0.9.0.0'
          }
          
          echo "VERSION=$fullVersion" >> $env:GITHUB_ENV
          echo "WIX_VERSION=$wixVersion" >> $env:GITHUB_ENV
          echo "version=$fullVersion" >> $env:GITHUB_OUTPUT
          echo "wix_version=$wixVersion" >> $env:GITHUB_OUTPUT
          
          Write-Host "Full version: $fullVersion"
          Write-Host "WiX version: $wixVersion"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Build Release
        run: cargo build --release --verbose

      - name: Install WiX Toolset
        run: |
          choco install wixtoolset -y
          echo "C:\Program Files (x86)\WiX Toolset v3.11\bin" >> $env:GITHUB_PATH

      - name: Build MSI
        run: |
          candle.exe -nologo -ext WixUIExtension -ext WixUtilExtension `
            -dCargoTargetBinDir=target\release `
            -dVersion="${{ env.WIX_VERSION }}" `
            wix\main.wxs
          light.exe -nologo -ext WixUIExtension -ext WixUtilExtension `
            -sval -spdb `
            -out vice-snapshot-to-prg-converter-${{ env.VERSION }}-x86_64-windows.msi `
            main.wixobj

      - name: Create Portable Package
        run: |
          New-Item -ItemType Directory -Force -Path portable-package
          
          Copy-Item target\release\vice-snapshot-to-prg-converter.exe portable-package\
          Copy-Item external-utils\vcruntime140.dll portable-package\
          Copy-Item README.md portable-package\
          Copy-Item CHANGELOG.md portable-package\
          
          @"
          VICE Snapshot to PRG Converter - Portable Edition
          ==================================================
          
          Version: ${{ env.VERSION }}
          
          This is a portable version that requires no installation.
          
          HOW TO USE:
          1. Extract this ZIP file to any folder you like
          2. Run vice-snapshot-to-prg-converter.exe
          3. Done!
          
          The program will:
          - Create temporary files in your system's temp folder
          - Not write anything to registry or Program Files
          
          REQUIREMENTS:
          - Windows 7 or later (64-bit)
          - Visual C++ Redistributable 2015-2022
            (included as vcruntime140.dll if not already installed)
          
          To completely remove:
          - Just delete the folder you extracted to
          - Optionally clean temp folder: %TEMP%\ViceSnapshotConvert.*
          
          For full documentation, see README.md or visit:
          https://github.com/tommyo123/Vice_Snapshot_to_PRG
          "@ | Out-File -FilePath portable-package\README-PORTABLE.txt -Encoding UTF8
          
          Compress-Archive -Force -Path portable-package\* `
            -DestinationPath vice-snapshot-to-prg-converter-${{ env.VERSION }}-x86_64-windows-portable.zip

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: |
            vice-snapshot-to-prg-converter-${{ env.VERSION }}-x86_64-windows.msi
            vice-snapshot-to-prg-converter-${{ env.VERSION }}-x86_64-windows-portable.zip
          retention-days: 7

  # Linux build (tar.gz)
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git for private repos
        run: |
          git config --global url."https://${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Set version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${{ github.ref_name }}"
          fi
          VERSION="${VERSION#v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Build Release
        run: cargo build --release --verbose

      - name: Create tar.gz package
        run: |
          mkdir -p package
          cp target/release/vice-snapshot-to-prg-converter package/
          cp README.md package/
          cp CHANGELOG.md package/
          
          cat > package/README-LINUX.txt << 'EOF'
          VICE Snapshot to PRG Converter - Linux Edition
          ===============================================
          
          Version: ${{ env.VERSION }}
          
          HOW TO USE:
          1. Extract this archive
          2. Make the binary executable: chmod +x vice-snapshot-to-prg-converter
          3. Run: ./vice-snapshot-to-prg-converter
          
          The program will create temporary files in /tmp/ViceSnapshotConvert.*
          
          For full documentation, see README.md or visit:
          https://github.com/tommyo123/Vice_Snapshot_to_PRG
          EOF
          
          cd package
          tar -czf ../vice-snapshot-to-prg-converter-${{ env.VERSION }}-x86_64-linux.tar.gz *

      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-release
          path: vice-snapshot-to-prg-converter-${{ env.VERSION }}-x86_64-linux.tar.gz
          retention-days: 7

  # macOS build (tar.gz)
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git for private repos
        run: |
          git config --global url."https://${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Set version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${{ github.ref_name }}"
          fi
          VERSION="${VERSION#v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Build Release
        run: cargo build --release --verbose

      - name: Create tar.gz package
        run: |
          mkdir -p package
          cp target/release/vice-snapshot-to-prg-converter package/
          cp README.md package/
          cp CHANGELOG.md package/
          
          cat > package/README-MACOS.txt << 'EOF'
          VICE Snapshot to PRG Converter - macOS Edition
          ===============================================
          
          Version: ${{ env.VERSION }}
          
          HOW TO USE:
          1. Extract this archive
          2. Make the binary executable: chmod +x vice-snapshot-to-prg-converter
          3. Run: ./vice-snapshot-to-prg-converter
          
          If you get a security warning, go to System Preferences > Security & Privacy
          and allow the application to run.
          
          The program will create temporary files in /tmp/ViceSnapshotConvert.*
          
          For full documentation, see README.md or visit:
          https://github.com/tommyo123/Vice_Snapshot_to_PRG
          EOF
          
          cd package
          tar -czf ../vice-snapshot-to-prg-converter-${{ env.VERSION }}-x86_64-macos.tar.gz *

      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-release
          path: vice-snapshot-to-prg-converter-${{ env.VERSION }}-x86_64-macos.tar.gz
          retention-days: 7

  # Create GitHub Release
  create-release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.inputs.create_release == 'true'
    steps:
      - name: Set version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${{ github.ref_name }}"
          fi
          VERSION="${VERSION#v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-release/*
            linux-release/*
            macos-release/*
          body: |
            ## VICE Snapshot to PRG Converter ${{ env.VERSION }}
            
            ### Installation Options
            
            **Windows:**
            - **MSI Installer (Recommended):** Installs to Program Files with Start Menu shortcuts
            - **Portable ZIP:** Extract and run anywhere, no installation required
            
            **Linux:**
            - **tar.gz:** Extract and run the binary directly
            
            **macOS:**
            - **tar.gz:** Extract and run the binary directly
            
            ### Windows Security Warning
            
            Windows may show a SmartScreen warning because the installer is not code-signed.
            This is normal for unsigned software. Click "More info" → "Run anyway".
            The source code is available for review.
            
            ### Changes
            
            See [CHANGELOG.md](https://github.com/tommyo123/Vice_Snapshot_to_PRG/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
